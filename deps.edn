{:paths   ["src" "src/sql" "resources"]
 :deps    {clj-http/clj-http            {:mvn/version "3.13.0"}
           com.taoensso/tufte           {:mvn/version "2.6.3"}
           hiccup/hiccup                {:mvn/version "2.0.0-RC1"}
           org.clojure/clojure          {:mvn/version "1.12.0"}
           org.clojure/core.async       {:mvn/version "1.7.701"}
           org.clojure/data.json        {:mvn/version "2.5.1"}
           org.clojure/tools.cli        {:mvn/version "1.1.230"}
           io.github.sig-gis/triangulum {:git/sha "1e0e6f189fe696ad3998cf0731c2fde1b72d6254"}}
 :aliases {:build-uberjar    {:exec-fn   triangulum.packaging/build-uberjar
                              :exec-args {:app-name      geosync
                                          :src-dirs      ["src"]
                                          :main-ns       geosync.cli
                                          :resource-dirs ["src/sql"]}}
           :build-db         {:main-opts ["-m" "triangulum.build-db"]}
           :check-deps       {:deps      {com.github.liquidz/antq {:mvn/version "RELEASE"}}
                              :main-opts ["-m" "antq.core"]}
           :check-reflection {:main-opts ["-e" "(do,(set!,*warn-on-reflection*,true),nil)"
                                          "-e" "(require,'geosync.cli)"]}
           :rebel            {:extra-deps {com.bhauman/rebel-readline {:mvn/version "0.1.5"}}
                              :main-opts  ["-m" "rebel-readline.main"]}
           :run              {:main-opts ["-m" "geosync.cli"]}
           :test-runner      {:extra-paths ["test"]
                              :extra-deps  {io.github.cognitect-labs/test-runner
                                            {:git/tag "v0.5.1"
                                             :git/sha "dfb30dd"}}
                              :main-opts   ["-m" "cognitect.test-runner"]
                              :exec-fn     cognitect.test-runner.api/test}}}
